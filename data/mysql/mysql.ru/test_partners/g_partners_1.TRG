TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`localhost` TRIGGER `test_partners`.`g_partners_1_changes_before` BEFORE UPDATE ON `test_partners`.`g_partners_1` FOR EACH ROW BEGIN\n\nIF \n    OLD.`show_name` != NEW.`show_name` ||\n    OLD.`shop_currency_on` != NEW.`shop_currency_on` ||\n    OLD.`show_probability` != NEW.`show_probability` ||\n    OLD.`show_probability_suspicious` != NEW.`show_probability_suspicious` ||\n    OLD.`auto_delete` != NEW.`auto_delete` ||\n    OLD.`limit_blocked` != NEW.`limit_blocked` ||\n    OLD.`geo` != NEW.`geo` ||\n    OLD.`use_os_targeting` != NEW.`use_os_targeting` ||\n    OLD.`use_socdem` != NEW.`use_socdem` ||\n    OLD.`use_socdem_interests` != NEW.`use_socdem_interests` ||\n    OLD.`maximum_daily_teaser_shows_per_visitor` != NEW.`maximum_daily_teaser_shows_per_visitor` ||\n    OLD.`maximum_daily_campaign_shows_per_visitor` != NEW.`maximum_daily_campaign_shows_per_visitor` ||\n    OLD.`use_retargeting` != NEW.`use_retargeting` ||\n    OLD.`use_autoretargeting` != NEW.`use_autoretargeting` ||\n    OLD.`use_browsers_targeting` != NEW.`use_browsers_targeting` ||\n    OLD.`use_providers_targeting` != NEW.`use_providers_targeting` ||\n    OLD.`use_cat` != NEW.`use_cat` ||\n    OLD.`filter_2` != NEW.`filter_2` ||\n    OLD.`options` != NEW.`options` ||\n    OLD.`dsp_trace` != NEW.`dsp_trace` ||\n    OLD.`cheating_suspicion` != NEW.`cheating_suspicion` ||\n    OLD.`auction_position_factor` != NEW.`auction_position_factor` ||\n    OLD.`click_capping_frequency` != NEW.`click_capping_frequency` ||\n    OLD.`click_capping_whole_campaign` != NEW.`click_capping_whole_campaign` ||\n    OLD.`maximum_daily_teaser_shows_per_visitor` != NEW.`maximum_daily_teaser_shows_per_visitor` ||\n    OLD.`use_conversion_capping` != NEW.`use_conversion_capping` ||\n    OLD.`conversion_capping_day_count` != NEW.`conversion_capping_day_count`\nTHEN\n    SET NEW.`updated_time` = NOW();\nEND IF;\n\nIF \n    OLD.`options` != NEW.`options` ||\n    OLD.`socdem_acceleration_disable` != NEW.`socdem_acceleration_disable` ||\n    OLD.`use_ips_filter` != NEW.`use_ips_filter`\nTHEN \n    SET NEW.`url_updated` = NOW();\nEND IF;\n\nIF OLD.manager_delete = 0 && NEW.manager_delete = 1\n    THEN\n        SET NEW.`when_blocked` = NOW();\n        SET NEW.`when_manual_blocked` = NOW();\nEND IF;\n\nIF OLD.manual_delete = 0 && NEW.manual_delete = 1\n    THEN SET NEW.`when_blocked` = NOW();\nEND IF;\n\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `test_partners`.`g_partners_1_changes` AFTER UPDATE ON `test_partners`.`g_partners_1`\n FOR EACH ROW BEGIN\nIF OLD.geo != NEW.geo THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'geo\', OLD.geo, NOW(), NEW.geo);\nEND IF;\nIF OLD.show_name != NEW.show_name THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'show_name\', OLD.show_name, NOW(), NEW.show_name);\nEND IF;\nIF OLD.proc_tblock != NEW.proc_tblock THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'proc_tblock\', OLD.proc_tblock, NOW(), NEW.proc_tblock);\nEND IF;\nIF OLD.buyer_sum_per_click != NEW.buyer_sum_per_click THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'buyer_sum_per_click\', OLD.buyer_sum_per_click, NOW(), NEW.buyer_sum_per_click);\nEND IF;\nIF OLD.buyer_start_clicks != NEW.buyer_start_clicks THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'buyer_start_clicks\', OLD.buyer_start_clicks, NOW(), NEW.buyer_start_clicks);\nEND IF;\nIF OLD.buyer_start_data != NEW.buyer_start_data THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'buyer_start_data\', OLD.buyer_start_data, NOW(), NEW.buyer_start_data);\nEND IF;\nIF OLD.limit_per_day != NEW.limit_per_day THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'limit_per_day\', OLD.limit_per_day, NOW(), NEW.limit_per_day);\nEND IF;\nIF OLD.limit_per_campaign != NEW.limit_per_campaign THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'limit_per_campaign\', OLD.limit_per_campaign, NOW(), NEW.limit_per_campaign);\nEND IF;\nIF OLD.ads_correct_factor != NEW.ads_correct_factor THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'ads_correct_factor\', OLD.ads_correct_factor, NOW(), NEW.ads_correct_factor);\nEND IF;\nIF OLD.manual_delete != NEW.manual_delete THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'manual_delete\', OLD.manual_delete, NOW(), NEW.manual_delete);\nEND IF;\nIF OLD.manager_delete != NEW.manager_delete THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'manager_delete\', OLD.manager_delete, NOW(), NEW.manager_delete);\nEND IF;\nIF OLD.sponsor_showcase != NEW.sponsor_showcase THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'sponsor_showcase\', OLD.sponsor_showcase, NOW(), NEW.sponsor_showcase);\nEND IF;\nIF OLD.alias_names != NEW.alias_names THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'alias_names\', OLD.alias_names, NOW(), NEW.alias_names);\nEND IF;\nIF OLD.auto_delete != NEW.auto_delete THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'auto_delete\', OLD.auto_delete, NOW(), NEW.auto_delete);\nEND IF;\nIF OLD.fast_update_poc != NEW.fast_update_poc THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'fast_update_poc\', OLD.fast_update_poc, NOW(), NEW.fast_update_poc);\nEND IF;\nIF OLD.limit_blocked != NEW.limit_blocked THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'limit_blocked\', OLD.limit_blocked, NOW(), NEW.limit_blocked);\nEND IF;\nIF OLD.limit_blocked_reason != NEW.limit_blocked_reason THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'limit_blocked_reason\', OLD.limit_blocked_reason, NOW(), NEW.limit_blocked_reason);\nEND IF;\nIF OLD.show_probability != NEW.show_probability THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'show_probability\', OLD.show_probability, NOW(), NEW.show_probability);\nEND IF;\nIF OLD.subnet != NEW.subnet THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'subnet\', OLD.subnet, NOW(), NEW.subnet);\nEND IF;\nIF OLD.use_cat != NEW.use_cat THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'use_cat\', OLD.use_cat, NOW(), NEW.use_cat);\nEND IF;\nIF OLD.reason_show_probability != NEW.reason_show_probability THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'reason_show_probability\', OLD.reason_show_probability, NOW(), NEW.reason_show_probability);\nEND IF;\nIF (OLD.money_paid != NEW.money_paid || OLD.deposit_correct_factor != NEW.deposit_correct_factor) THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_deposit_log`(`id`, `partner`, `dt`, `old_deposit`, `new_deposit`, `added`, `old_correct`, `new_correct`, `rest_deposit`, `who_add`, `comments`)\n            VALUES(NULL , NEW.id, NOW( ) , OLD.money_paid, NEW.money_paid, NEW.money_paid - OLD.money_paid, OLD.deposit_correct_factor, NEW.deposit_correct_factor, OLD.rest_deposit, @auth_login, @comments);\nEND IF;\nIF OLD.suspicious_blocks_quota != NEW.suspicious_blocks_quota THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'suspicious_blocks_quota\', OLD.suspicious_blocks_quota, NOW(), NEW.suspicious_blocks_quota);\nEND IF;\nIF OLD.use_retargeting != NEW.use_retargeting THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'use_retargeting\', OLD.use_retargeting, NOW(), NEW.use_retargeting);\nEND IF;\nIF OLD.use_autoretargeting != NEW.use_autoretargeting THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'use_autoretargeting\', OLD.use_autoretargeting, NOW(), NEW.use_autoretargeting);\nEND IF;\nIF OLD.use_ips_filter != NEW.use_ips_filter THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'use_ips_filter\', OLD.use_ips_filter, NOW(), NEW.use_ips_filter);\nEND IF;\nIF OLD.dsp_trace != NEW.dsp_trace THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'dsp_trace\', OLD.dsp_trace, NOW(), NEW.dsp_trace);\nEND IF;\nIF OLD.send_bidfloor != NEW.send_bidfloor THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'send_bidfloor\', OLD.send_bidfloor, NOW(), NEW.send_bidfloor);\nEND IF;\nIF OLD.cheating_suspicion != NEW.cheating_suspicion THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'cheating_suspicion\', OLD.cheating_suspicion, NOW(), NEW.cheating_suspicion);\nEND IF;\nIF OLD.yandex_metrika_counter_id != NEW.yandex_metrika_counter_id THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'yandex_metrika_counter_id\', OLD.yandex_metrika_counter_id, NOW(), NEW.yandex_metrika_counter_id);\nEND IF;\nIF OLD.import_yandex_metrika_conversion != NEW.import_yandex_metrika_conversion THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(NEW.id, @auth_login, \'import_yandex_metrika_conversion\', OLD.import_yandex_metrika_conversion, NOW(), NEW.import_yandex_metrika_conversion);\nEND IF;\nEND' 'CREATE DEFINER=`root`@`%` TRIGGER `test_partners`.`g_partners_1_au_log_floating_limits` AFTER UPDATE ON `g_partners_1`\nFOR EACH ROW BEGIN\n  IF (NEW.use_floating_limit = 1 AND (\n      (NEW.floating_limit_budget IS NULL XOR OLD.floating_limit_budget IS NULL) OR \n      (NEW.floating_limit_clicks IS NULL XOR OLD.floating_limit_clicks IS NULL) OR \n      (NEW.floating_limit_budget <> OLD.floating_limit_budget) OR\n      (NEW.floating_limit_clicks <> OLD.floating_limit_clicks) OR\n      (NEW.show_probability <> OLD.show_probability))\n  ) THEN\n    INSERT INTO g_partners_1_floating_limits_log_tmp (g_partners_1_id, floating_limit_budget, floating_limit_clicks, show_probability) VALUES\n      (NEW.id, NEW.floating_limit_budget, NEW.floating_limit_clicks, NEW.show_probability);\n  END IF;\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `g_partners_1_delete_check` BEFORE DELETE ON `g_partners_1`\n FOR EACH ROW BEGIN\n\nIF @auth_login IS null THEN\n    INSERT INTO `test_partners_changes`.`null_who_change`(id, `who_change`) VALUES(null, @auth_login);\nEND IF;\n\nIF (LENGTH(@key) > 0) THEN\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`partner`, `who`, `field`, `old_value`, `when`, `new_value`)\n        VALUES(OLD.id, @auth_login, \'delete\', @key, NOW(), \'\');\nELSE\n    INSERT INTO `test_partners_changes`.`g_partners_1_changes`(`invalid_key`) VALUES(\'access_denied\');\nEND IF;\n\nIF @test IS NULL THEN\n    SET @key = \'\';\nEND IF;\n\nEND'
sql_modes=1342177280 1342177280 1342177280 0
definers='root@localhost' 'root@localhost' 'root@%' 'root@localhost'
client_cs_names='utf8' 'utf8' 'utf8mb4' 'utf8'
connection_cl_names='utf8_general_ci' 'utf8_general_ci' 'utf8mb4_unicode_ci' 'utf8_general_ci'
db_cl_names='utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci'
created=153375877617 153375877618 153375877620 153375877621
