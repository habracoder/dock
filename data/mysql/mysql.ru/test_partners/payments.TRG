TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`localhost` TRIGGER `tr_BI_payments`\nBEFORE INSERT\nON `payments`\nFOR EACH ROW\nBEGIN\n  CALL `test_strong`.`pr_payments_check_key`();\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `tr_BU_payments`\nBEFORE UPDATE\nON `payments`\nFOR EACH ROW\nBEGIN\n  CALL `test_strong`.`pr_payments_check_key`();\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `tr_AU_payments`\n        AFTER UPDATE\n        ON `payments`\n        FOR EACH ROW\nBEGIN\n\n	IF OLD.partner != NEW.partner THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'partner\', OLD.partner, NEW.partner, NOW(), USER() );\n	END IF;\n\n        IF OLD.client_id != NEW.client_id THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'client_id\', OLD.client_id, NEW.client_id, NOW(), USER() );\n	END IF;\n\n        IF OLD.client_purse_id != NEW.client_purse_id THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'client_purse_id\', OLD.client_purse_id, NEW.client_purse_id, NOW(), USER() );\n	END IF;\n\n        IF OLD.paid_purse != NEW.paid_purse THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'paid_purse\', OLD.paid_purse, NEW.paid_purse, NOW(), USER() );\n	END IF;\n\n        IF OLD.paid_currency != NEW.paid_currency THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'paid_currency\', OLD.paid_currency, NEW.paid_currency, NOW(), USER() );\n	END IF;\n\n        IF OLD.`type` != NEW.`type` THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'type\', OLD.`type`, NEW.`type`, NOW(), USER() );\n	END IF;\n\n        IF OLD.status != NEW.status THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'partner\', OLD.status, NEW.status, NOW(), USER() );\n	END IF;\n\n        IF OLD.email != NEW.email THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'email\', OLD.email, NEW.email, NOW(), USER() );\n	END IF;\n\n        IF OLD.icq != NEW.icq THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'icq\', OLD.icq, NEW.icq, NOW(), USER() );\n	END IF;\n\n        IF OLD.skype != NEW.skype THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'skype\', OLD.skype, NEW.skype, NOW(), USER() );\n	END IF;\n\n        IF OLD.wish != NEW.wish THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'wish\', OLD.wish, NEW.wish, NOW(), USER() );\n	END IF;\n\n        IF OLD.pay_requested != NEW.pay_requested THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'pay_requested\', OLD.pay_requested, NEW.pay_requested, NOW(), USER() );\n	END IF;\n\n        IF OLD.pay_approved != NEW.pay_approved THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'pay_approved\', OLD.pay_approved, NEW.pay_approved, NOW(), USER() );\n	END IF;\n\n        IF OLD.service != NEW.service THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'service\', OLD.service, NEW.service, NOW(), USER() );\n	END IF;\n\n        IF OLD.active_purse != NEW.active_purse THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'active_purse\', OLD.active_purse, NEW.active_purse, NOW(), USER() );\n	END IF;\n\n        IF OLD.protection_code != NEW.protection_code THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'protection_code\', OLD.protection_code, NEW.protection_code, NOW(), USER() );\n	END IF;\n\n        IF OLD.pay != NEW.pay THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'pay\', OLD.pay, NEW.pay, NOW(), USER() );\n	END IF;\n\n        IF OLD.rate != NEW.rate THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'rate\', OLD.rate, NEW.rate, NOW(), USER() );\n	END IF;\n\n        IF OLD.comment_internal != NEW.comment_internal THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'comment_internal\', OLD.comment_internal, NEW.comment_internal, NOW(), USER() );\n	END IF;\n\n        IF OLD.comment_external != NEW.comment_external THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'comment_external\', OLD.comment_external, NEW.comment_external, NOW(), USER() );\n	END IF;\n\n        IF OLD.preferred_date != NEW.preferred_date THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'preferred_date\', OLD.preferred_date, NEW.preferred_date, NOW(), USER() );\n	END IF;\n\n        IF OLD.when_add != NEW.when_add THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'when_add\', OLD.when_add, NEW.when_add, NOW(), USER() );\n	END IF;\n\n        IF OLD.when_change != NEW.when_change THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'when_change\', OLD.when_change, NEW.when_change, NOW(), USER() );\n	END IF;\n\n        IF OLD.who_change != NEW.who_change THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'who_change\', OLD.who_change, NEW.who_change, NOW(), USER() );\n	END IF;\n\n        IF OLD.pack != NEW.pack THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'pack\', OLD.pack, NEW.pack, NOW(), USER() );\n	END IF;\n\n        IF OLD.tax != NEW.tax THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'tax\', OLD.tax, NEW.tax, NOW(), USER() );\n	END IF;\n\n        IF OLD.comment_partner != NEW.comment_partner THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'comment_partner\', OLD.comment_partner, NEW.comment_partner, NOW(), USER() );\n	END IF;\n\n        IF OLD.old_comment_partner != NEW.old_comment_partner THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'old_comment_partner\', OLD.old_comment_partner, NEW.old_comment_partner, NOW(), USER() );\n	END IF;\n\n        IF OLD.direction != NEW.direction THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'direction\', OLD.direction, NEW.direction, NOW(), USER() );\n	END IF;\n\n        IF OLD.tovarro != NEW.tovarro THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'tovarro\', OLD.tovarro, NEW.tovarro, NOW(), USER() );\n	END IF;\n\n        IF OLD.subnet != NEW.subnet THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'subnet\', OLD.subnet, NEW.subnet, NOW(), USER() );\n	END IF;\n\n        IF OLD.who_add != NEW.who_add THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'who_add\', OLD.who_add, NEW.who_add, NOW(), USER() );\n	END IF;\n\n        IF OLD._1c != NEW._1c THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'_1c\', OLD._1c, NEW._1c, NOW(), USER() );\n	END IF;\n\n        IF OLD.auto_approve != NEW.auto_approve THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'auto_approve\', OLD.auto_approve, NEW.auto_approve, NOW(), USER() );\n	END IF;\n\n        IF OLD.not_auto_approve_reason != NEW.not_auto_approve_reason THEN\n	INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`, `field`, `old_value`, `new_value`, `when`, `mysql_user`)\n		VALUES (NEW.id, @auth_login, \'not_auto_approve_reason\', OLD.not_auto_approve_reason, NEW.not_auto_approve_reason, NOW(), USER() );\n	END IF;\n\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER `test_partners`.`tr_BD_payments`\nAFTER DELETE\nON `payments`\nFOR EACH ROW\nBEGIN\n\n  CALL `test_strong`.`pr_payments_check_key`();\n\n  INSERT INTO `test_partners_changes`.`payments_changes` (`payment`, `who`,\n  `when`, `mysql_user`, `field`, `old_value`, `new_value`)\n    VALUES (OLD.id, @auth_login, NOW(), USER(), \'delete\', \'\', \'\');\n\nEND'
sql_modes=1342177280 1342177280 1342177280 1342177280
definers='root@localhost' 'root@localhost' 'root@localhost' 'root@localhost'
client_cs_names='utf8' 'utf8' 'utf8' 'utf8'
connection_cl_names='utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci'
db_cl_names='utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci' 'utf8_general_ci'
created=153375877658 153375877659 153375877660 153375877661
